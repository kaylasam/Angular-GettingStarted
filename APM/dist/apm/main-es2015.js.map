{"version":3,"sources":["./src/environments/environment.ts","./src/app/shared/convert-to-spaces.pipe.ts","./src/app/products/product-detail.component.ts","./src/app/products/product-detail.component.html","./src/app/products/product-detail.guard.ts","./src/app/shared/star.component.ts","./src/app/shared/star.component.html","./src/app/shared/shared.module.ts","./src/app/products/product.service.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/products/product-list.component.html","./src/app/products/product-list.component.ts","./src/app/products/product.module.ts","./src/app/home/welcome.component.ts","./src/app/home/welcome.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe ({\n    name: 'convertToSpaces'\n})\nexport class ConvertToSpacesPipe implements PipeTransform{\n    transform(value: string, character: string): string {\n        return value.replace(character, ' ');\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IProduct } from './product';\n\n@Component({\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.css']\n})\nexport class ProductDetailComponent implements OnInit {\n  pageTitle: string = 'Product Detail';\n\n  constructor(private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    //get product id from URL \n    //use snapshot since this value never changes when navigating in the product detail page\n    const id = Number(this.route.snapshot.paramMap.get('id'));    // change id type from string to number \n    this.pageTitle += `: ${id}`;    //adds product id to the page title for that specific product detail page\n  }\n\n  onBack(): void {\n    this.router.navigate(['/products']);\n  }\n\n}\n","<div class='card'>\n    <div class='card-header'>\n        {{pageTitle}}\n    </div>\n    <div class=\"card-footer\">\n        <button class=\"btn btn-outline-secondary\"\n        style=\"width: 80px\"\n        (click) = onBack()>\n        <i class = 'fa fa-chevron-left'></i>\n        Back\n    </button>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductDetailGuard implements CanActivate {\n\n  constructor(private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      const id = Number(route.paramMap.get('id'));\n      if (isNaN(id) || id < 1){\n        alert ('Invalid product id');\n        this.router.navigate(['/products'])\n        return false;\n      }\n    return true;\n  }\n  \n}\n","// nested component \nimport { Component, EventEmitter, Input, OnChanges, Output } from \"@angular/core\";\n\n@Component ({\n    selector: 'pm-star',\n    templateUrl: './star.component.html',\n    styleUrls: ['./star.component.css']\n})\nexport class StarComponent implements OnChanges{\n    @Input() rating: number = 0;        // add Input decorator to any property we want passed in \n    cropWidth: number = 75;\n    @Output() ratingClicked: EventEmitter<string> = new EventEmitter<string>();     //@Output requires event\n\n    ngOnChanges(): void {\n        this.cropWidth = this.rating * 75/5;\n    }\n\n    onClick(): void {                   // called when user clicks on the stars\n        // use event property (ratingClicked) and emit method (specific to EventEmitter) to pass the string\n        this.ratingClicked.emit(`The rating ${this.rating} was clicked!`)       // ` for template literal use\n    }\n}\n","<div class=\"crop\"\n     [style.width.px]=\"cropWidth\"\n     [title]=\"rating\"\n     (click) = 'onClick()'>\n  <div style=\"width: 75px\">\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StarComponent } from './star.component';\nimport { FormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [\n    StarComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    CommonModule,\n    FormsModule,\n    StarComponent\n  ]\n})\nexport class SharedModule { }\n","import { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, throwError } from \"rxjs\";\nimport { IProduct } from \"./product\";\nimport { catchError, tap } from 'rxjs/operators';\n\n@Injectable ({\n    providedIn: 'root'      // makes service available to the entire application\n})\nexport class ProductService {\n\n    private productUrl = 'api/products/products.json';          //url of the \"web server\" to send http requests\n\n    constructor(private http: HttpClient){}         //constructors define dependencies (HTTP)\n\n    getProducts(): Observable<IProduct[]>{\n        return this.http.get<IProduct[]>(this.productUrl).pipe(\n        tap(data => console.log('All', JSON.stringify(data))),\n        catchError(this.handleError)\n        );\n    }\n\n    private handleError(err: HttpErrorResponse): Observable<never> {\n        // in a real world app, we may send the server to some remote logging infrastructure\n        // instead of just logging it to the console\n        let errorMessage = '';\n        if (err.error instanceof ErrorEvent) {\n          // A client-side or network error occurred. Handle it accordingly.\n          errorMessage = `An error occurred: ${err.error.message}`;\n        } else {\n          // The backend returned an unsuccessful response code.\n          // The response body may contain clues as to what went wrong,\n          errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n        }\n        console.error(errorMessage);\n        return throwError(errorMessage);\n      }\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'pm-root',   //will be the directive used in html when refering to this component\n  template: `\n    <nav class='navbar navbar-expand navbar-light bg-light'>\n        <a class='navbar-brand'>{{pageTitle}}</a>\n        <ul class='nav nav-pills'>\n          <li><a class='nav-link' routerLinkActive='active' routerLink='/welcome'>Home</a></li>\n          <li><a class='nav-link' routerLinkActive='active' routerLink='/products'>Product List</a></li>\n        </ul>\n    </nav>\n    <div class = 'container'>\n      <router-outlet></router-outlet>\n    </div>\n  `\n})\nexport class AppComponent {\n  pageTitle: string = 'Acme Product Management';\n}\n","// application's root angular module\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { WelcomeComponent } from './home/welcome.component';\nimport { RouterModule } from '@angular/router';\nimport { ProductModule } from './products/product.module';\n\n@NgModule({                 // defines class as an Angular module\n  declarations: [           // declarations array defines what components belong to this module\n    AppComponent,\n    WelcomeComponent\n  ],\n  imports: [                // defines the external modules we want to have available to \n    BrowserModule,          // the components that belong to this module \n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      { path: 'welcome', component: WelcomeComponent },\n      { path: '', redirectTo: 'welcome', pathMatch: 'full' },   //automatically reroutes to /welcome if anything is unrecognizable\n      { path: '**', redirectTo: 'welcome', pathMatch: 'full'}\n    ]),\n    ProductModule   \n  ],\n  bootstrap: [AppComponent] // defines startup component of the application\n})\nexport class AppModule { }\n","<div class = 'card'>\n    <div class = 'card-header'>\n        {{pageTitle}}\n    </div>\n    <div class = 'card-body'>\n        <div class = 'row'>\n            <div class = 'col-md-2'> Filter by: </div>\n            <div class='col-md-4'>\n                <input type='text'\n                        [(ngModel)] = 'listFilter'/>            <!--two way binding-->\n              </div>\n            </div>\n            <div class='row'>\n              <div class='col-md-6'>\n                <h4>Filtered by: {{listFilter}}</h4>\n              </div>\n            </div>\n            <div class='table-responsive'>\n              <table class='table' *ngIf = 'products.length'>   <!--shows table (column labels) if products exist in the products array-->\n                <thead>\n                  <tr>\n                    <th>\n                      <button class='btn btn-primary'\n                        (click) = 'toggleImage()'>              <!--when button is clicked, toggleImage() is called-->\n                        {{showImage ? 'Hide' : 'Show'}} Image\n                      </button>\n                    </th>\n                    <th>Product</th>\n                    <th>Code</th>\n                    <th>Available</th>\n                    <th>Price</th>\n                    <th>5 Star Rating</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr *ngFor = 'let product of filteredProducts'>           <!--tr = table row-->\n                      <td>\n                          <img *ngIf = 'showImage'                  \n                                [src] = 'product.imageUrl'               \n                                [title] = 'product.productName'\n                                [style.width.px] = 'imageWidth'\n                                [style.margin.px] = 'imageMargin'>  <!--displays image, image label, and adjusts image size and margin-->                              \n                      </td>                                         <!--td = table data-->\n                      <td>\n                          <a [routerLink] = \"['/products', product.productId]\">     <!--add routerlink directive to make product names links and URLS = to /product/id-->\n                              {{product.productName}}\n                          </a>\n                      </td>\n                      <td>{{product.productCode | lowercase | convertToSpaces: '-' }}</td>\n                      <td>{{product.releaseDate}}</td>\n                      <td>{{product.price | currency}}</td>\n                      <td><pm-star [rating] = 'product.starRating' \n                        (ratingClicked) = 'onRatingClicked($event)'>\n                      </pm-star></td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { IProduct } from \"./product\";\nimport { ProductService } from \"./product.service\";\n\n@Component({\n    templateUrl: './product-list.component.html',\n    styleUrls: ['./product-list.component.css']     //can add more styles here\n})\nexport class ProductListComponent implements OnInit, OnDestroy{\n    pageTitle: string = 'Product List';             // binds to the pageTitle property in the template using interpolation\n    imageWidth: number = 50;\n    imageMargin: number = 2;\n    showImage: boolean = false;                     //keeps track if images are shown in the UI\n    errorMessage: string = ' ';\n    sub: Subscription | undefined;\n\n    // updates value in listFilter variable when user changes it\n    private _listFilter: string = ' ';\n    get listFilter(): string {\n        return this._listFilter;\n    }\n    set listFilter(value: string){\n        this._listFilter = value;\n        console.log('In setter: ', value);\n        this.filteredProducts = this.performFilter(value);      //assigns filtered products to filteredProducts\n    }\n\n    filteredProducts: IProduct[] = [];\n    products: IProduct[] = [];                             // \"any\" used when we dont know/care what the property type is \n    \n    constructor(private productService: ProductService){}\n\n    performFilter(filterBy: string): IProduct[] {       //function takes in filter string and returns array of products\n        filterBy = filterBy.toLocaleLowerCase();        //convert filter string to lowercase for easy comparison\n        return this.products.filter((product: IProduct) => \n        product.productName.toLocaleLowerCase().includes(filterBy));\n    }\n\n    toggleImage(): void {                          //sets showImage to the negation of the current showImage value\n        this.showImage = !this.showImage\n    }\n\n    ngOnInit(): void {\n        this.productService.getProducts().subscribe({           //subscribes to observable\n            next: products => {\n                this.products = products;           //handles the emitted iten\n                this.filteredProducts = this.products;\n            },\n            error: err => this.errorMessage = err           //handles any errors\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.sub?.unsubscribe();\n    }\n    \n    onRatingClicked(message: string): void {\n        this.pageTitle = 'Product List ' + message;\n    }\n}","import { NgModule } from '@angular/core';\nimport { ProductListComponent } from './product-list.component';\nimport { ProductDetailComponent } from './product-detail.component';\nimport { ConvertToSpacesPipe } from '../shared/convert-to-spaces.pipe';\nimport { RouterModule } from '@angular/router';\nimport { ProductDetailGuard } from './product-detail.guard';\nimport { SharedModule } from '../shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [\n    ProductListComponent,\n    ProductDetailComponent,\n    ConvertToSpacesPipe\n  ],\n  imports: [\n    RouterModule.forChild([\n      { path: 'products', component: ProductListComponent },\n      { \n        path: 'products/:id', \n        canActivate: [ProductDetailGuard],\n        component: ProductDetailComponent,\n      }\n    ]),\n    SharedModule      // shared module shares common module, forms module and star component with any module that imports it\n  ]\n})\nexport class ProductModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './welcome.component.html'\n})\nexport class WelcomeComponent {\n  public pageTitle = 'Welcome';\n}\n","<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n  <div class=\"card-body\">\n    <div class=\"container-fluid\">\n      <div class=\"text-center\">\n        <img src=\"./assets/images/logo.jpg\"\n             class=\"img-responsive center-block\"\n             style=\"max-height:300px;padding-bottom:50px\" />\n      </div>\n\n      <div class=\"text-center\">Developed by:</div>\n      <div class=\"text-center\">\n        <h3>Deborah Kurata</h3>\n      </div>\n\n      <div class=\"text-center\">@deborahkurata</div>\n      <div class=\"text-center\">\n        <a href=\"http://www.bit.ly/DeborahKsBlog\">www.bit.ly/DeborahKsBlog</a>\n      </div>\n    </div>\n  </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}