{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/shared/convert-to-spaces.pipe.ts","webpack:///src/app/products/product-detail.component.ts","webpack:///src/app/products/product-detail.component.html","webpack:///src/app/products/product-detail.guard.ts","webpack:///src/app/shared/star.component.ts","webpack:///src/app/shared/star.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/products/product.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/products/product-list.component.html","webpack:///src/app/products/product-list.component.ts","webpack:///src/app/products/product.module.ts","webpack:///src/app/home/welcome.component.ts","webpack:///src/app/home/welcome.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","ConvertToSpacesPipe","value","character","replace","ProductDetailComponent","route","router","pageTitle","id","Number","snapshot","paramMap","get","navigate","onBack","ProductDetailGuard","state","isNaN","alert","StarComponent","rating","cropWidth","ratingClicked","emit","onClick","SharedModule","ProductService","http","productUrl","pipe","data","console","log","JSON","stringify","handleError","err","errorMessage","error","ErrorEvent","message","status","AppComponent","AppModule","forRoot","path","component","redirectTo","pathMatch","ProductListComponent","productService","imageWidth","imageMargin","showImage","_listFilter","filteredProducts","products","performFilter","filterBy","toLocaleLowerCase","filter","product","productName","includes","getProducts","subscribe","next","sub","unsubscribe","ProductModule","forChild","canActivate","WelcomeComponent","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe ({\n    name: 'convertToSpaces'\n})\nexport class ConvertToSpacesPipe implements PipeTransform{\n    transform(value: string, character: string): string {\n        return value.replace(character, ' ');\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IProduct } from './product';\n\n@Component({\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.css']\n})\nexport class ProductDetailComponent implements OnInit {\n  pageTitle: string = 'Product Detail';\n\n  constructor(private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    //get product id from URL \n    //use snapshot since this value never changes when navigating in the product detail page\n    const id = Number(this.route.snapshot.paramMap.get('id'));    // change id type from string to number \n    this.pageTitle += `: ${id}`;    //adds product id to the page title for that specific product detail page\n  }\n\n  onBack(): void {\n    this.router.navigate(['/products']);\n  }\n\n}\n","<div class='card'>\n    <div class='card-header'>\n        {{pageTitle}}\n    </div>\n    <div class=\"card-footer\">\n        <button class=\"btn btn-outline-secondary\"\n        style=\"width: 80px\"\n        (click) = onBack()>\n        <i class = 'fa fa-chevron-left'></i>\n        Back\n    </button>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductDetailGuard implements CanActivate {\n\n  constructor(private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      const id = Number(route.paramMap.get('id'));\n      if (isNaN(id) || id < 1){\n        alert ('Invalid product id');\n        this.router.navigate(['/products'])\n        return false;\n      }\n    return true;\n  }\n  \n}\n","// nested component \nimport { Component, EventEmitter, Input, OnChanges, Output } from \"@angular/core\";\n\n@Component ({\n    selector: 'pm-star',\n    templateUrl: './star.component.html',\n    styleUrls: ['./star.component.css']\n})\nexport class StarComponent implements OnChanges{\n    @Input() rating: number = 0;        // add Input decorator to any property we want passed in \n    cropWidth: number = 75;\n    @Output() ratingClicked: EventEmitter<string> = new EventEmitter<string>();     //@Output requires event\n\n    ngOnChanges(): void {\n        this.cropWidth = this.rating * 75/5;\n    }\n\n    onClick(): void {                   // called when user clicks on the stars\n        // use event property (ratingClicked) and emit method (specific to EventEmitter) to pass the string\n        this.ratingClicked.emit(`The rating ${this.rating} was clicked!`)       // ` for template literal use\n    }\n}\n","<div class=\"crop\"\n     [style.width.px]=\"cropWidth\"\n     [title]=\"rating\"\n     (click) = 'onClick()'>\n  <div style=\"width: 75px\">\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StarComponent } from './star.component';\nimport { FormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [\n    StarComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    CommonModule,\n    FormsModule,\n    StarComponent\n  ]\n})\nexport class SharedModule { }\n","import { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, throwError } from \"rxjs\";\nimport { IProduct } from \"./product\";\nimport { catchError, tap } from 'rxjs/operators';\n\n@Injectable ({\n    providedIn: 'root'      // makes service available to the entire application\n})\nexport class ProductService {\n\n    private productUrl = 'api/products/products.json';          //url of the \"web server\" to send http requests\n\n    constructor(private http: HttpClient){}         //constructors define dependencies (HTTP)\n\n    getProducts(): Observable<IProduct[]>{\n        return this.http.get<IProduct[]>(this.productUrl).pipe(\n        tap(data => console.log('All', JSON.stringify(data))),\n        catchError(this.handleError)\n        );\n    }\n\n    private handleError(err: HttpErrorResponse): Observable<never> {\n        // in a real world app, we may send the server to some remote logging infrastructure\n        // instead of just logging it to the console\n        let errorMessage = '';\n        if (err.error instanceof ErrorEvent) {\n          // A client-side or network error occurred. Handle it accordingly.\n          errorMessage = `An error occurred: ${err.error.message}`;\n        } else {\n          // The backend returned an unsuccessful response code.\n          // The response body may contain clues as to what went wrong,\n          errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n        }\n        console.error(errorMessage);\n        return throwError(errorMessage);\n      }\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'pm-root',   //will be the directive used in html when refering to this component\n  template: `\n    <nav class='navbar navbar-expand navbar-light bg-light'>\n        <a class='navbar-brand'>{{pageTitle}}</a>\n        <ul class='nav nav-pills'>\n          <li><a class='nav-link' routerLinkActive='active' routerLink='/welcome'>Home</a></li>\n          <li><a class='nav-link' routerLinkActive='active' routerLink='/products'>Product List</a></li>\n        </ul>\n    </nav>\n    <div class = 'container'>\n      <router-outlet></router-outlet>\n    </div>\n  `\n})\nexport class AppComponent {\n  pageTitle: string = 'Acme Product Management';\n}\n","// application's root angular module\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { WelcomeComponent } from './home/welcome.component';\nimport { RouterModule } from '@angular/router';\nimport { ProductModule } from './products/product.module';\n\n@NgModule({                 // defines class as an Angular module\n  declarations: [           // declarations array defines what components belong to this module\n    AppComponent,\n    WelcomeComponent\n  ],\n  imports: [                // defines the external modules we want to have available to \n    BrowserModule,          // the components that belong to this module \n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      { path: 'welcome', component: WelcomeComponent },\n      { path: '', redirectTo: 'welcome', pathMatch: 'full' },   //automatically reroutes to /welcome if anything is unrecognizable\n      { path: '**', redirectTo: 'welcome', pathMatch: 'full'}\n    ]),\n    ProductModule   \n  ],\n  bootstrap: [AppComponent] // defines startup component of the application\n})\nexport class AppModule { }\n","<div class = 'card'>\n    <div class = 'card-header'>\n        {{pageTitle}}\n    </div>\n    <div class = 'card-body'>\n        <div class = 'row'>\n            <div class = 'col-md-2'> Filter by: </div>\n            <div class='col-md-4'>\n                <input type='text'\n                        [(ngModel)] = 'listFilter'/>            <!--two way binding-->\n              </div>\n            </div>\n            <div class='row'>\n              <div class='col-md-6'>\n                <h4>Filtered by: {{listFilter}}</h4>\n              </div>\n            </div>\n            <div class='table-responsive'>\n              <table class='table' *ngIf = 'products.length'>   <!--shows table (column labels) if products exist in the products array-->\n                <thead>\n                  <tr>\n                    <th>\n                      <button class='btn btn-primary'\n                        (click) = 'toggleImage()'>              <!--when button is clicked, toggleImage() is called-->\n                        {{showImage ? 'Hide' : 'Show'}} Image\n                      </button>\n                    </th>\n                    <th>Product</th>\n                    <th>Code</th>\n                    <th>Available</th>\n                    <th>Price</th>\n                    <th>5 Star Rating</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr *ngFor = 'let product of filteredProducts'>           <!--tr = table row-->\n                      <td>\n                          <img *ngIf = 'showImage'                  \n                                [src] = 'product.imageUrl'               \n                                [title] = 'product.productName'\n                                [style.width.px] = 'imageWidth'\n                                [style.margin.px] = 'imageMargin'>  <!--displays image, image label, and adjusts image size and margin-->                              \n                      </td>                                         <!--td = table data-->\n                      <td>\n                          <a [routerLink] = \"['/products', product.productId]\">     <!--add routerlink directive to make product names links and URLS = to /product/id-->\n                              {{product.productName}}\n                          </a>\n                      </td>\n                      <td>{{product.productCode | lowercase | convertToSpaces: '-' }}</td>\n                      <td>{{product.releaseDate}}</td>\n                      <td>{{product.price | currency}}</td>\n                      <td><pm-star [rating] = 'product.starRating' \n                        (ratingClicked) = 'onRatingClicked($event)'>\n                      </pm-star></td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { IProduct } from \"./product\";\nimport { ProductService } from \"./product.service\";\n\n@Component({\n    templateUrl: './product-list.component.html',\n    styleUrls: ['./product-list.component.css']     //can add more styles here\n})\nexport class ProductListComponent implements OnInit, OnDestroy{\n    pageTitle: string = 'Product List';             // binds to the pageTitle property in the template using interpolation\n    imageWidth: number = 50;\n    imageMargin: number = 2;\n    showImage: boolean = false;                     //keeps track if images are shown in the UI\n    errorMessage: string = ' ';\n    sub: Subscription | undefined;\n\n    // updates value in listFilter variable when user changes it\n    private _listFilter: string = ' ';\n    get listFilter(): string {\n        return this._listFilter;\n    }\n    set listFilter(value: string){\n        this._listFilter = value;\n        console.log('In setter: ', value);\n        this.filteredProducts = this.performFilter(value);      //assigns filtered products to filteredProducts\n    }\n\n    filteredProducts: IProduct[] = [];\n    products: IProduct[] = [];                             // \"any\" used when we dont know/care what the property type is \n    \n    constructor(private productService: ProductService){}\n\n    performFilter(filterBy: string): IProduct[] {       //function takes in filter string and returns array of products\n        filterBy = filterBy.toLocaleLowerCase();        //convert filter string to lowercase for easy comparison\n        return this.products.filter((product: IProduct) => \n        product.productName.toLocaleLowerCase().includes(filterBy));\n    }\n\n    toggleImage(): void {                          //sets showImage to the negation of the current showImage value\n        this.showImage = !this.showImage\n    }\n\n    ngOnInit(): void {\n        this.productService.getProducts().subscribe({           //subscribes to observable\n            next: products => {\n                this.products = products;           //handles the emitted iten\n                this.filteredProducts = this.products;\n            },\n            error: err => this.errorMessage = err           //handles any errors\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.sub?.unsubscribe();\n    }\n    \n    onRatingClicked(message: string): void {\n        this.pageTitle = 'Product List ' + message;\n    }\n}","import { NgModule } from '@angular/core';\nimport { ProductListComponent } from './product-list.component';\nimport { ProductDetailComponent } from './product-detail.component';\nimport { ConvertToSpacesPipe } from '../shared/convert-to-spaces.pipe';\nimport { RouterModule } from '@angular/router';\nimport { ProductDetailGuard } from './product-detail.guard';\nimport { SharedModule } from '../shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [\n    ProductListComponent,\n    ProductDetailComponent,\n    ConvertToSpacesPipe\n  ],\n  imports: [\n    RouterModule.forChild([\n      { path: 'products', component: ProductListComponent },\n      { \n        path: 'products/:id', \n        canActivate: [ProductDetailGuard],\n        component: ProductDetailComponent,\n      }\n    ]),\n    SharedModule      // shared module shares common module, forms module and star component with any module that imports it\n  ]\n})\nexport class ProductModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './welcome.component.html'\n})\nexport class WelcomeComponent {\n  public pageTitle = 'Welcome';\n}\n","<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n  <div class=\"card-body\">\n    <div class=\"container-fluid\">\n      <div class=\"text-center\">\n        <img src=\"./assets/images/logo.jpg\"\n             class=\"img-responsive center-block\"\n             style=\"max-height:300px;padding-bottom:50px\" />\n      </div>\n\n      <div class=\"text-center\">Developed by:</div>\n      <div class=\"text-center\">\n        <h3>Deborah Kurata</h3>\n      </div>\n\n      <div class=\"text-center\">@deborahkurata</div>\n      <div class=\"text-center\">\n        <a href=\"http://www.bit.ly/DeborahKsBlog\">www.bit.ly/DeborahKsBlog</a>\n      </div>\n    </div>\n  </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}